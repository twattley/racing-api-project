#!/bin/sh
# Script to format and lint the entire monorepo using globally installed tools (via pipx).

# --- Configuration ---
# Determine the absolute path to the monorepo root.
# This assumes this script is located in the 'scripts' directory,
# which is directly under the monorepo root.
MONOREPO_ROOT="$(dirname "$(dirname "$0")")"

# Directories containing Python code within your monorepo to target
TARGET_CODE_DIRS="apps libraries notebooks" # Added notebooks here, adjust if needed

# --- Navigate to monorepo root ---
# Important for tools to correctly find files across the workspace
echo "Changing to monorepo root: $MONOREPO_ROOT"
cd "$MONOREPO_ROOT" || { echo "Failed to change to monorepo root." >&2; exit 1; }

# --- Run Formatting and Linting Tools ---
# Ensure these tools (autoflake, isort, black, ruff) are installed globally via pipx.
# For example: pipx install autoflake isort black ruff

echo "Running autoflake (removes unused imports and variables)..."
# autoflake is often run first to clean up the code before other formatters.
# --in-place: Modifies files directly.
# --recursive: Processes directories recursively.
# --remove-all-unused-imports: Removes all unused imports.
# --remove-unused-variables: Removes unused variables.
# --ignore-init-module-imports: Prevents removing imports from __init__.py if they're used by other modules in the package.
# --exclude: Excludes directories (like virtual environments, build artifacts).
autoflake --in-place --recursive \
          --remove-all-unused-imports --remove-unused-variables --ignore-init-module-imports \
          --exclude .venv,build,dist,htmlcov,*egg-info*,__pycache__ \
          $TARGET_CODE_DIRS

echo "Running isort (sorts imports)..."
# isort: Ensures imports are sorted and grouped correctly.
# --profile black: Uses a configuration compatible with Black.
# .: Runs on the current directory (monorepo root), finding all Python files.
isort --profile black .

echo "Running black (formats code for consistent style)..."
# black: An uncompromising code formatter.
# .: Formats files in the current directory (monorepo root).
black .

# echo "Running ruff check --fix (linting and fixing common issues)..."
# # ruff check: A fast linter that can also fix many issues.
# # --fix: Applies fixes for fixable rules automatically.
# # .: Runs on the current directory.
# ruff check --fix .

# echo "Running ruff format (fast, Black-compatible formatting)..."
# # ruff format: Ruff's built-in formatter, which is Black-compatible.
# # This ensures consistency with Ruff's own formatting rules.
# # .: Formats files in the current directory.
# ruff format .

# echo "Code formatting and linting complete across the monorepo!"