#!/bin/zsh

SOURCE_HOST="server"
DEST_HOST="localhost"

POSTGRES_DB="racing-api"
POSTGRES_USER="postgres"

# Configuration
SYNC_INTERVAL=${SYNC_INTERVAL:-10}  # Default 10 seconds between syncs
ERROR_SLEEP=${ERROR_SLEEP:-10}      # Sleep 10 seconds after errors

echo "Starting continuous live price sync..."
echo "Source: ${SOURCE_HOST}:${POSTGRES_DB}"
echo "Destination: ${DEST_HOST}:${POSTGRES_DB}"
echo "Sync interval: ${SYNC_INTERVAL}s, Error retry: ${ERROR_SLEEP}s"
echo "Press Ctrl+C to exit"
echo ""

# Function to perform the sync
sync_price_data() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] Starting price sync..."
    # Rolling window of 7 days to avoid flakiness and keep payload small
    WINDOW_START=$(psql -h $SOURCE_HOST -d $POSTGRES_DB -U $POSTGRES_USER -At -c "SELECT (CURRENT_DATE - INTERVAL '7 days')::timestamp")
    echo "  - Window start: $WINDOW_START"
    
    # Sync updated_price_data for today's races
    echo "  - Syncing live_betting.updated_price_data..."
    psql -h $SOURCE_HOST -d $POSTGRES_DB -U $POSTGRES_USER -c \
        "COPY (
            SELECT 
                status,
                market_id_win,
                selection_id,
                betfair_win_sp,
                betfair_place_sp,
                market_id_place,
                created_at
            FROM live_betting.updated_price_data
            WHERE race_time >= TIMESTAMP '${WINDOW_START}'
         ) TO STDOUT" | \
    psql -h $DEST_HOST -d $POSTGRES_DB -U $POSTGRES_USER -c \
        "CREATE TEMP TABLE price_temp AS SELECT * FROM live_betting.updated_price_data_v2 WHERE FALSE;
         COPY price_temp FROM STDIN;

         DELETE FROM live_betting.updated_price_data_v2
         WHERE status <> 'ACTIVE';
         
         INSERT INTO live_betting.updated_price_data_v2
         SELECT * FROM price_temp
         ON CONFLICT (selection_id, market_id_win, market_id_place) DO UPDATE SET
             status = EXCLUDED.status,
             betfair_win_sp = EXCLUDED.betfair_win_sp,
             betfair_place_sp = EXCLUDED.betfair_place_sp,
             created_at = EXCLUDED.created_at;
             
         DROP TABLE price_temp;"

    echo "[$(date '+%Y-%m-%d %H:%M:%S')] Price sync completed successfully!"
}

# Main loop
while true; do
    if sync_price_data; then
        echo "Waiting ${SYNC_INTERVAL}s until next sync..."
        sleep $SYNC_INTERVAL
    else
        echo "[$(date '+%Y-%m-%d %H:%M:%S')] ERROR: Price sync failed (network/database issue)"
        echo "Retrying in ${ERROR_SLEEP}s..."
        sleep $ERROR_SLEEP
    fi
done
